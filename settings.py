import pymysql
pymysql.install_as_MySQLdb()
"""
Django settings for shoe_shop project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7bn7^mhzy+7v9m9=zpsp%o^66py2%wv#o_+p=!)t0%!z19ji*2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'shop',
    'crispy_forms',  # For better form styling
    'crispy_bootstrap5',  # Bootstrap 5 for forms
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shoe_shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # Add the path to your templates directory
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shoe_shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
     'default': {
        'ENGINE': 'django.db.backends.mysql',  # âœ… MySQL
        'NAME': 'shoe_shopdb',
        'USER': 'root',
        'PASSWORD': 'manaal123',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'  # URL prefix for static files

# Directory where static files will be collected to when you run `collectstatic`
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # This is the location for collected static files (for deployment)

# Additional directories to look for static files during development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # This is where you keep your static files during development
]

# Media files (user-uploaded files)
MEDIA_URL = '/media/'  # URL for user-uploaded files (if any)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory to store user-uploaded files


# Caching configuration (optional, only if you need it)
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',
#         'LOCATION': 'redis://127.0.0.1:6379/1',
#     }
# }
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'default_cache_table',  # Cache table name
    }
}

# Session settings (optional, only if you need them)
SESSION_ENGINE = "django.contrib.sessions.backends.db"

# Authentication backends (optional, if you're using custom authentication)
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailBackend',  # Custom email-based backend (if you're using it)
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

# Custom user model (if you're using a custom user model in the 'accounts' app)
AUTH_USER_MODEL = 'accounts.User'

# Login and redirect settings
LOGIN_URL = '/accounts/login/'
# settings.py
LOGIN_REDIRECT_URL = 'home'  # Redirect after login
LOGOUT_REDIRECT_URL = 'login'  # Redirect after logout


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
